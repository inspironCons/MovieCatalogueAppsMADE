# The proguard configuration file for the following section is D:\Ramdhon\DICODING\MADE\Submission\MovieCatalogueAppsMADE\core\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-7.1.2
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
# Adding optimization introduces certain risks, since for example not all optimizations performed by
# ProGuard works on all versions of Dalvik.  The following flags turn off various optimizations
# known to have issues, but the list may not be complete or up to date. (The "arithmetic"
# optimization can be used if you are only targeting Android 2.0 or later.)  Make sure you test
# thoroughly if you go this route.
-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*
-optimizationpasses 5
-allowaccessmodification

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# This class is deprecated, but remains for backward compatibility.
-dontwarn android.util.FloatMath

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep
-keep class androidx.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from D:\Ramdhon\DICODING\MADE\Submission\MovieCatalogueAppsMADE\core\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-7.1.2
# The proguard configuration file for the following section is D:\Ramdhon\DICODING\MADE\Submission\MovieCatalogueAppsMADE\core\proguard-rules.pro
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

#SQL Chiper proguard rules
-keep,includedescriptorclasses class net.sqlcipher.** { *; }
-keep,includedescriptorclasses interface net.sqlcipher.** { *; }

-keepattributes LineNumberTable,SourceFile
-renamesourcefileattribute SourceFile

#Membuat laporan kode yang dihapus (atau dipertahankan)
-printusage mappings/usage.txt
#ingin melihat laporan titik entri yang ditentukan R8 dari aturan keep project Anda
-printseeds mappings/seeds.txt
-printmapping mappings/mapping.txt
-printconfiguration mappings/config.txt

# Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and
# EnclosingMethod is required to use InnerClasses.
-keepattributes Signature, InnerClasses, EnclosingMethod

# Retrofit does reflection on method and parameter annotations.
-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations

# Keep annotation default values (e.g., retrofit2.http.Field.encoded).
-keepattributes AnnotationDefault

# Retain service method parameters when optimizing.
-keepclassmembers,allowshrinking,allowobfuscation interface * {
    @retrofit2.http.* <methods>;
}

# Ignore annotation used for build tooling.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# Ignore JSR 305 annotations for embedding nullability information.
-dontwarn javax.annotation.**

# Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.
-dontwarn kotlin.Unit

# Top-level functions that can only be used by Kotlin.
-dontwarn retrofit2.KotlinExtensions
-dontwarn retrofit2.KotlinExtensions$*

# With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy
# and replaces all potential values with null. Explicitly keeping the interfaces prevents this.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface <1>

# Keep generic signature of Call, Response (R8 full mode strips signatures from non-kept items).
-keep,allowobfuscation,allowshrinking interface retrofit2.Call
-keep,allowobfuscation,allowshrinking class retrofit2.Response

# With R8 full mode generic signatures are stripped for classes that are not
# kept. Suspend functions are wrapped in continuations where the type argument
# is used.
-keep,allowobfuscation,allowshrinking class kotlin.coroutines.Continuation

#Flipper
-keep class com.facebook.jni.** { *; }
-keep class com.facebook.flipper.** { *; }
-dontwarn com.facebook.litho.**
-dontwarn com.facebook.flipper.**
-dontwarn com.facebook.yoga.**
-dontwarn org.mozilla.**
-dontwarn  com.facebook.fbui.**

##---------------Begin: proguard configuration for Gson  ----------
# Gson uses generic type information stored in a class file when working with fields. Proguard
# removes such information by default, so configure it to keep all of it.
-keepattributes Signature

# For using GSON @Expose annotation
-keepattributes *Annotation*

# Gson specific classes
-dontwarn sun.misc.**
#-keep class com.google.gson.stream.** { *; }

# Application classes that will be serialized/deserialized over Gson
-keep class com.google.gson.examples.android.model.** { <fields>; }

# Prevent proguard from stripping interface information from TypeAdapter, TypeAdapterFactory,
# JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)
-keep class * extends com.google.gson.TypeAdapter
-keep class * implements com.google.gson.TypeAdapterFactory
-keep class * implements com.google.gson.JsonSerializer
-keep class * implements com.google.gson.JsonDeserializer

# Prevent R8 from leaving Data object members always null
-keepclassmembers,allowobfuscation class * {
  @com.google.gson.annotations.SerializedName <fields>;
}

# Retain generic signatures of TypeToken and its subclasses with R8 version 3.0 and higher.
-keep,allowobfuscation,allowshrinking class com.google.gson.reflect.TypeToken
-keep,allowobfuscation,allowshrinking class * extends com.google.gson.reflect.TypeToken

##---------------End: proguard configuration for Gson  ----------
# End of content from D:\Ramdhon\DICODING\MADE\Submission\MovieCatalogueAppsMADE\core\proguard-rules.pro
# The proguard configuration file for the following section is D:\Ramdhon\DICODING\MADE\Submission\MovieCatalogueAppsMADE\core\build\intermediates\aapt_proguard_file\debug\aapt_rules.txt
# Generated by the gradle plugin
-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(...); }
-keep class com.google.android.material.imageview.ShapeableImageView { <init>(...); }

# End of content from D:\Ramdhon\DICODING\MADE\Submission\MovieCatalogueAppsMADE\core\build\intermediates\aapt_proguard_file\debug\aapt_rules.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\c2b0d315de7406a27d832b4bf64eb07d\transformed\rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

-keep class kotlinx.coroutines.android.AndroidDispatcherFactory {*;}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}
# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\c2b0d315de7406a27d832b4bf64eb07d\transformed\rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\f3fd886a01e2735c86f17132034002e8\transformed\rules\lib\META-INF\proguard\coroutines.pro
# ServiceLoader support
-keepnames class kotlinx.coroutines.internal.MainDispatcherFactory {}
-keepnames class kotlinx.coroutines.CoroutineExceptionHandler {}

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\f3fd886a01e2735c86f17132034002e8\transformed\rules\lib\META-INF\proguard\coroutines.pro
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\6a6a9d12f8ac5161bd32c7872bf81d11\transformed\material-1.5.0\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\6a6a9d12f8ac5161bd32c7872bf81d11\transformed\material-1.5.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\4e5122d2cf40b38d7639e06a64b96053\transformed\appcompat-1.4.1\proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\4e5122d2cf40b38d7639e06a64b96053\transformed\appcompat-1.4.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\aee363dedb0d48a3c96c4107db1de65b\transformed\jetified-glide-4.12.0\proguard.txt
-keep public class * implements com.bumptech.glide.module.GlideModule
-keep class * extends com.bumptech.glide.module.AppGlideModule {
 <init>(...);
}
-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}
-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {
  *** rewind();
}

# Uncomment for DexGuard only
#-keepresourcexmlelements manifest/application/meta-data@value=GlideModule

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\aee363dedb0d48a3c96c4107db1de65b\transformed\jetified-glide-4.12.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\b6220ed3936ea60877e77c102e85d5a6\transformed\jetified-hilt-lifecycle-viewmodel-1.0.0-alpha03\proguard.txt
# Keep class names of Hilt injected ViewModels since their name are used as a multibinding map key.
-keepclasseswithmembernames class * extends androidx.lifecycle.ViewModel {
    @androidx.hilt.lifecycle.ViewModelInject
    <init>(...);
}
# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\b6220ed3936ea60877e77c102e85d5a6\transformed\jetified-hilt-lifecycle-viewmodel-1.0.0-alpha03\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\75f4ae2e5ddfd9b9e493cb301508f337\transformed\jetified-hilt-android-2.40\proguard.txt
# Keep for the reflective cast done in EntryPoints.
# See b/183070411#comment4 for more info.
-keep,allowobfuscation,allowshrinking @dagger.hilt.EntryPoint class *# Keep for the reflective cast done in EntryPoints.
# See b/183070411#comment4 for more info.
-keep,allowobfuscation,allowshrinking @dagger.hilt.android.EarlyEntryPoint class *# Keep class names of Hilt injected ViewModels since their name are used as a multibinding map key.
-keepnames @dagger.hilt.android.lifecycle.HiltViewModel class * extends androidx.lifecycle.ViewModel# Keep for the reflective cast done in EntryPoints.
# See b/183070411#comment4 for more info.
-keep,allowobfuscation,allowshrinking @dagger.hilt.internal.ComponentEntryPoint class *
-keep,allowobfuscation,allowshrinking @dagger.hilt.internal.GeneratedEntryPoint class *
# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\75f4ae2e5ddfd9b9e493cb301508f337\transformed\jetified-hilt-android-2.40\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\4c7da1ac980b23c98bd4a8c457d12c9c\transformed\fragment-1.4.1\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\4c7da1ac980b23c98bd4a8c457d12c9c\transformed\fragment-1.4.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\c33900aaf23c9e5a624e74b332131456\transformed\recyclerview-1.2.1\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\c33900aaf23c9e5a624e74b332131456\transformed\recyclerview-1.2.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\dc61cbc9b273a8da1180f39975700067\transformed\rules\lib\META-INF\proguard\retrofit2.pro
# Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and
# EnclosingMethod is required to use InnerClasses.
-keepattributes Signature, InnerClasses, EnclosingMethod

# Retrofit does reflection on method and parameter annotations.
-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations

# Retain service method parameters when optimizing.
-keepclassmembers,allowshrinking,allowobfuscation interface * {
    @retrofit2.http.* <methods>;
}

# Ignore annotation used for build tooling.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# Ignore JSR 305 annotations for embedding nullability information.
-dontwarn javax.annotation.**

# Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.
-dontwarn kotlin.Unit

# Top-level functions that can only be used by Kotlin.
-dontwarn retrofit2.KotlinExtensions
-dontwarn retrofit2.KotlinExtensions$*

# With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy
# and replaces all potential values with null. Explicitly keeping the interfaces prevents this.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface <1>

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\dc61cbc9b273a8da1180f39975700067\transformed\rules\lib\META-INF\proguard\retrofit2.pro
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\2446800ee86adaa23d0638f7900209b7\transformed\rules\lib\META-INF\proguard\okhttp3.pro
# JSR 305 annotations are for embedding nullability information.
-dontwarn javax.annotation.**

# A resource is loaded with a relative path so the package of this class must be preserved.
-keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase

# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# OkHttp platform used only on JVM and when Conscrypt dependency is available.
-dontwarn okhttp3.internal.platform.ConscryptPlatform
-dontwarn org.conscrypt.ConscryptHostnameVerifier

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\2446800ee86adaa23d0638f7900209b7\transformed\rules\lib\META-INF\proguard\okhttp3.pro
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\8c2a3e5d15cee81372cac7d96ad0135f\transformed\room-runtime-2.4.2\proguard.txt
-keep class * extends androidx.room.RoomDatabase
-dontwarn androidx.room.paging.**

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\8c2a3e5d15cee81372cac7d96ad0135f\transformed\room-runtime-2.4.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\b92d0589dc12b06e1dea6f8274c2220a\transformed\coordinatorlayout-1.1.0\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\b92d0589dc12b06e1dea6f8274c2220a\transformed\coordinatorlayout-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\4bb1eabf4b56a809b9c372dc7dfc1eb3\transformed\transition-1.2.0\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\4bb1eabf4b56a809b9c372dc7dfc1eb3\transformed\transition-1.2.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\5bb243c24998d87eb4164f05fbbfe232\transformed\vectordrawable-animated-1.1.0\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\5bb243c24998d87eb4164f05fbbfe232\transformed\vectordrawable-animated-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\841bac2d4f776270ab664a34bcf03c99\transformed\media-1.0.0\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Prevent Parcelable objects from being removed or renamed.
-keep class android.support.v4.media.** implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
}

# Prevent Parcelable objects from being removed or renamed.
-keep class androidx.media.** implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
}
# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\841bac2d4f776270ab664a34bcf03c99\transformed\media-1.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\7bd9bb82678c12fb2005da3368449ae5\transformed\core-1.7.0\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\7bd9bb82678c12fb2005da3368449ae5\transformed\core-1.7.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\e1db9cd65247ae0082d0664b9ec29a55\transformed\jetified-lifecycle-viewmodel-savedstate-2.3.1\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\e1db9cd65247ae0082d0664b9ec29a55\transformed\jetified-lifecycle-viewmodel-savedstate-2.3.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\0a4db346a7eb6a2328dfb7bc75e49092\transformed\jetified-savedstate-1.1.0\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\0a4db346a7eb6a2328dfb7bc75e49092\transformed\jetified-savedstate-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\7029d7455507c64d2ad01d0232326aed\transformed\lifecycle-viewmodel-2.4.1\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\7029d7455507c64d2ad01d0232326aed\transformed\lifecycle-viewmodel-2.4.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\533e6c8a4ebf11c6602b9b697bb641b5\transformed\versionedparcelable-1.1.1\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\533e6c8a4ebf11c6602b9b697bb641b5\transformed\versionedparcelable-1.1.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\bb5e393ecc6a3e3acc5476d28356c074\transformed\jetified-lifecycle-process-2.4.0\proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\bb5e393ecc6a3e3acc5476d28356c074\transformed\jetified-lifecycle-process-2.4.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\b0e5a8ce1ee09e207e70145d67236866\transformed\jetified-startup-runtime-1.0.0\proguard.txt
# This Proguard rule ensures that ComponentInitializers are are neither shrunk nor obfuscated.
# This is because they are discovered and instantiated during application initialization.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\b0e5a8ce1ee09e207e70145d67236866\transformed\jetified-startup-runtime-1.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\649c4b972fd2f42eb0e11ac0de2fdf09\transformed\lifecycle-runtime-2.4.0\proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\649c4b972fd2f42eb0e11ac0de2fdf09\transformed\lifecycle-runtime-2.4.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\9418220236e1a9552aefc4a3a696a46c\transformed\monitor-1.4.0\proguard.txt
# Proguard flags for the AndroidJUnitRunner library.

# avoid obfuscation of the instrumentation runners and orchestrator
-keepnames class androidx.test.**

# Annotation classes accessed via reflection
-keep class androidx.test.annotation.** { *; }

# for 'can't find referenced method 'android.app.Instrumentation$ActivityResult execStartActivity' etc
-dontwarn androidx.test.runner.MonitoringInstrumentation

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\9418220236e1a9552aefc4a3a696a46c\transformed\monitor-1.4.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\869e71655edb0551d47ca252a7ba88c5\transformed\rules\lib\META-INF\proguard\androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\869e71655edb0551d47ca252a7ba88c5\transformed\rules\lib\META-INF\proguard\androidx-annotations.pro
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\db8cc4a5227339228cb913bcec2ccdb7\transformed\jetified-leakcanary-android-core-2.8.1\proguard.txt
# Loaded via reflection & referenced by shark.AndroidReferenceMatchers.LEAK_CANARY_INTERNAL and shark.AndroidReferenceMatchers.LEAK_CANARY_HEAP_DUMPER
-keep class leakcanary.internal.InternalLeakCanary { *; }
# Marshmallow removed Notification.setLatestEventInfo()
-dontwarn android.app.Notification

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\db8cc4a5227339228cb913bcec2ccdb7\transformed\jetified-leakcanary-android-core-2.8.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\4a689070e6b45f5064be83d1188c676e\transformed\jetified-leakcanary-object-watcher-android-2.8.1\proguard.txt
# A ContentProvider that gets created by Android on startup
-keep class leakcanary.internal.MainProcessAppWatcherInstaller { <init>(); }

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\4a689070e6b45f5064be83d1188c676e\transformed\jetified-leakcanary-object-watcher-android-2.8.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\02bb4fdeb9d1bab2dda40d3878692ae8\transformed\jetified-plumber-android-2.8.1\proguard.txt
# A ContentProvider that gets created by Android on startup
-keep class leakcanary.internal.PlumberInstaller { <init>(); }

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\02bb4fdeb9d1bab2dda40d3878692ae8\transformed\jetified-plumber-android-2.8.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\f8c7eb4821e76cb9a5948911c35b6c87\transformed\rules\lib\META-INF\proguard\shark.pro
# Used during heap analysis to find resource id names
-keep class shark.AndroidResourceIdNames { *; }

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\f8c7eb4821e76cb9a5948911c35b6c87\transformed\rules\lib\META-INF\proguard\shark.pro
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\30c0ca5de5c67fb4cfaf5b4b4eec2b3b\transformed\rules\lib\META-INF\proguard\okio.pro
# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\30c0ca5de5c67fb4cfaf5b4b4eec2b3b\transformed\rules\lib\META-INF\proguard\okio.pro
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\2edc59799c7e372f00c6de442f8f94de\transformed\jetified-leakcanary-object-watcher-android-androidx-2.8.1\proguard.txt
# AndroidXFragmentDestroyWatcher is loaded via reflection
-keep class leakcanary.internal.AndroidXFragmentDestroyWatcher { *; }
# ViewModelClearedWatcher reaches into ViewModelStore using reflection.
-keep class androidx.lifecycle.ViewModelStore { *; }

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\2edc59799c7e372f00c6de442f8f94de\transformed\jetified-leakcanary-object-watcher-android-androidx-2.8.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\65aa4fc01276d28e3d030e666f0ba6e5\transformed\jetified-leakcanary-object-watcher-android-support-fragments-2.8.1\proguard.txt
# AndroidSupportFragmentDestroyWatcher is loaded via reflection
-keep class leakcanary.internal.AndroidSupportFragmentDestroyWatcher { *; }

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\65aa4fc01276d28e3d030e666f0ba6e5\transformed\jetified-leakcanary-object-watcher-android-support-fragments-2.8.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\eae74841f170200223866b53e3e70b99\transformed\jetified-leakcanary-object-watcher-android-core-2.8.1\proguard.txt
# KeyedWeakReference is looked up in the hprof file
-keep class leakcanary.KeyedWeakReference { *; }

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\eae74841f170200223866b53e3e70b99\transformed\jetified-leakcanary-object-watcher-android-core-2.8.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\9712f1892955e838a33689293e9461a9\transformed\jetified-plumber-android-core-2.8.1\proguard.txt
# Enum values are referenced reflectively in EnumSet initialization
-keepclassmembers,allowoptimization enum leakcanary.AndroidLeakFixes {
    public static **[] values();
}

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\9712f1892955e838a33689293e9461a9\transformed\jetified-plumber-android-core-2.8.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\RMS-PI4\.gradle\caches\transforms-3\27694e804cb00abdd95362fbb8fc6afc\transformed\jetified-annotation-experimental-1.1.0\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Ignore missing Kotlin meta-annotations so that this library can be used
# without adding a compileOnly dependency on the Kotlin standard library.
-dontwarn kotlin.Deprecated
-dontwarn kotlin.Metadata
-dontwarn kotlin.ReplaceWith
-dontwarn kotlin.annotation.AnnotationRetention
-dontwarn kotlin.annotation.AnnotationTarget
-dontwarn kotlin.annotation.Retention
-dontwarn kotlin.annotation.Target

# End of content from C:\Users\RMS-PI4\.gradle\caches\transforms-3\27694e804cb00abdd95362fbb8fc6afc\transformed\jetified-annotation-experimental-1.1.0\proguard.txt
# The proguard configuration file for the following section is <unknown>
-keep class **.R
-keep class **.R$* {*;}
-ignorewarnings
# End of content from <unknown>